volumes:
  sonarqube-data:
  sonarqube-extensions:
  sonarqube-logs:
  sonarqube-temp:
  sonarqube-postgres:
  sonarqube-postgres-data:
  sonarqube-postgres-backups:
  sonarqube-data-backups:

services:
  postgres:
    # Image tag (replace with yours)
    image: postgres:13
    volumes:
      - sonarqube-postgres:/var/lib/postgresql
      - sonarqube-postgres-data:/var/lib/postgresql/data
    environment:
      # Database user (replace with yours)
      POSTGRES_USER: sonardbuser
      # Database password (replace with yours)
      POSTGRES_PASSWORD: KV3Yp*a6k*Rnxo9DCf*V7cH
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -h 127.0.0.1"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 60s
    restart: unless-stopped

  sonarqube:
    # Image tag (replace with yours)
    image: sonarqube:9.5-community
    ports:
      - "9000:9000"
    volumes:
      - sonarqube-data:/opt/sonarqube/data
      - sonarqube-extensions:/opt/sonarqube/extensions
      - sonarqube-logs:/opt/sonarqube/logs
      - sonarqube-temp:/opt/sonarqube/temp
    environment:
      SONAR_JpostgresC_URL: jpostgresc:postgresql://postgres:5432/sonar
      # Database user (replace with yours)
      SONAR_JpostgresC_USERNAME: sonardbuser
      # Database password (replace with yours)
      SONAR_JpostgresC_PASSWORD: KV3Yp*a6k*Rnxo9DCf*V7cH
    healthcheck:
      test: ["CMD", "wget", "http://localhost:9000/","--spider"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 5s
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy

  backups:
    # Image tag (replace with yours)
    image: postgres:13
    # Database backups prune interval (replace with yours). Default is 7 days.
    # find /srv/sonarqube-postgres/backups -type f -mtime +7 | xargs rm -f

    # Application data backups prune interval (replace with yours). Default is 7 days.
    # find /srv/sonarqube-application-data/backups -type f -mtime +7 | xargs rm -f

    # SonarQube backups interval (replace with yours). Default is 1 day.
    # sleep 24h

    # Run sonarqube-restore-application-data.sh to restore application data if needed.
    # Run sonarqube-restore-database.sh to restore database if needed.
    command: sh -c 'sleep 30m
             && while true; do
             PGPASSWORD="$$(echo $$POSTGRES_PASSWORD)"
             pg_dump
             -h postgres
             -p 5432
             -d sonarqubedb
             -U sonarqubedbuser | gzip > /srv/sonarqube-postgres/backups/sonarqube-postgres-backup-$$(date "+%Y-%m-%d_%H-%M").gz
             && tar -zcpf /srv/sonarqube-application-data/backups/sonarqube-application-data-backup-$$(date "+%Y-%m-%d_%H-%M").tar.gz /opt/sonarqube/data
             && find /srv/sonarqube-postgres/backups -type f -mtime +7 | xargs rm -f
             && find /srv/sonarqube-application-data/backups -type f -mtime +7 | xargs rm -f;
             sleep 24h; done'
    volumes:
      - sonarqube-data:/opt/sonarqube/data
      # Application data backups location
      - sonarqube-data-backups:/srv/sonarqube-application-data/backups
      # Database backups location
      - sonarqube-postgres-backups:/srv/sonarqube-postgres/backups
    environment:
      # Database password (replace with yours)
      POSTGRES_PASSWORD: KV3Yp*a6k*Rnxo9DCf*V7cH
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
      sonarqube:
        condition: service_healthy
